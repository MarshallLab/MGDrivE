% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PN-epiSEIR-network-T.R
\name{spn_T_epiSEIR_network}
\alias{spn_T_epiSEIR_network}
\title{Make Transitions (T) For a Network (SEI Mosquitoes - SEIR Humans)}
\usage{
spn_T_epiSEIR_network(node_list, spn_P, params, cube, h_move, m_move)
}
\arguments{
\item{node_list}{a character vector specifying what type of nodes to create;
(m = a node with only mosquitoes, h = a node with only humans, b = a node with both humans and mosquitoes)}

\item{spn_P}{set of places produced by \code{\link{spn_P_epiSEIR_network}}}

\item{params}{a named list of parameters (see details)}

\item{cube}{an inheritance cube from the \code{MGDrivE} package (e.g. \code{\link[MGDrivE]{cubeMendelian}})}

\item{h_move}{binary adjacency matrix indicating if movement of humans between nodes is possible or not}

\item{m_move}{binary adjacency matrix indicating if movement of mosquitoes between nodes is possible or not}
}
\value{
a list with two elements: \code{T} contains transitions packets as lists,
\code{v} is the character vector of transitions (T)
}
\description{
This function makes the set of transitions (T) for a SPN model of a
metapopulation network for simulation of coupled SEI-SEIR dynamics. It is the
network version of \code{\link{spn_T_epiSEIR_node}}.
}
\details{
This function takes the places produced from \code{\link{spn_P_epiSEIR_network}}
and builds all possible transitions between subsets of those places.

The \code{params} argument supplies all of the ecological parameters necessary
to calculate equilibrium values. This function requires the \code{nE},
\code{nL}, \code{nP}, and \code{nEIP} parameters to be specified. For more details, see
\code{\link{equilibrium_SEI_SEIR}}

While this function produces all structural information related to transitions,
hazards are produced by a separate function, \code{\link{spn_hazards}}.

For larger networks, this function may take some time to return, please be patient;
the Petri Net modeling formalism trades additional computation time at model
initialization for faster sampling of trajectories within a simulation.

Please note, the movement matrices (\code{h_move} and \code{m_move}) are NOT
stochastic matrices, just binary matrices that say if i,j can exchange population.
Diagonal elements must be \code{FALSE}, and both matrices are checked for validity; the
function will stop with errors if the adjacency matrix specifies illegal movement
rules (e.g.; mosquito movement from a "h" node to a "b" node)
}
\examples{
\dontrun{
  # parameters, see vignette MGDrivE2 SEIR Epidemiological Dynamics
  theta <- list(qE = 1/4, nE = 2, qL = 1/3, nL = 3, qP = 1/6, nP = 2,
                muE = 0.05, muL = 0.15, muP = 0.05, muF = 0.09, muM = 0.09,
                beta = 16, nu = 1/(4/24), NH = 250, X = c(1,0,0,0), NFX = 500,
                f = 1/3, Q = 0.9, b = 0.55, c = 0.15, delta = 1/5, r = 1/14,
                muH = 1/(62*365), qEIP = 1/11, nEIP = 3 )

  # spn_P needs setup elsewhere, see vignettes

  # setup a 3-node network
  node_list <- c("m", "b", "h")

  # setup allowed migration locations
  m_move <- matrix(data = c(FALSE,TRUE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE),
                   nrow = 3, ncol = 3)
  h_move <- matrix(data = c(FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,TRUE,FALSE),
                   nrow = 3, ncol = 3)

  spn_T <- spn_T_epiSEIR_network(node_list = node_list, spn_P = spn_P, params = theta,
                                 cube = MGDrivE::cubeMendelian(),
                                 h_move = h_move, m_move = m_move )
}

}
